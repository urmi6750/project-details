Java code for digital signature
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.imageio.ImageIO;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.BueredImageLuminanceSource;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.common.HybridBinarizer;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
// last part import
import java.io.StringReader;

import java.io.StringWriter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.xml.sax.InputSource;
public class HelloWorld
public static void main(String[] args) throws WriterException,
IOException, NotFoundException
String xmlString = null;
try
File inputFile = new
File("/home/shamim/Desktop/pro/signedXML.xml
DocumentBuilderFactory dbFactory =
DocumentBuilderFactory.newInstance();
DocumentBuilder dBuilder =
dbFactory.newDocumentBuilder();
Document doc = dBuilder.parse(inputFile);
DOMSource domSource = new DOMSource(doc);
StringWriter writer = new StringWriter();
StreamResult result = new StreamResult(writer);
TransformerFactory tf =
TransformerFactory.newInstance();
Transformer transformer = tf.newTransformer();
transformer.transform(domSource, result);

xmlString = writer.toString();
catch (Exception e)
e.printStackTrace();
String qrCodeData = xmlString;
String lePath = "/home/shamim/Desktop/pro/QRcode.png";
String charset = "UTF-8"; // or "ISO-8859-1"
Map<EncodeHintType, ErrorCorrectionLevel> hintMap = new
HashMap<EncodeHintType, ErrorCorrectionLevel>();
hintMap.put(EncodeHintType.ERRORCORRECTION;
ErrorCorrectionLevel.L);
// to get QR image from XML le
// createQRCode(qrCodeData, lePath, charset, hintMap, 170, 170); //
System.out.println("QR Code image created successfully .");
// to get xml le from QR image
String stringFromQRCode = readQRCode(lePath, charset, hintMap);
stringToXmlConvert(stringFromQRCode);
public static void createQRCode(String qrCodeData, String
lePath, String charset, Map hintMap, int qrCodeheight,
int qrCodewidth) throws WriterException, IOException
BitMatrix matrix = new MultiFormatWriter().encode(new
String(qrCodeData.getBytes(charset), charset),
BarcodeFormat.QRCODE; qrCodewidth; qrCodeheight;
hintMap);
MatrixToImageWriter.writeToFile(matrix,
lePath.substring(lePath.lastIndexOf('.') + 1), new
File(lePath));
public static String readQRCode(String lePath, String
charset, Map hintMap)
throws FileNotFoundException, IOException,
NotFoundException

BinaryBitmap binaryBitmap = new BinaryBitmap(
new HybridBinarizer(new
BueredImageLuminanceSource(ImageIO.read(new
FileInputStream(lePath))))); Result qrCodeResult = new
MultiFormatReader().decode(binaryBitmap, hintMap);
String abc = qrCodeResult.getText();
return abc;
public static void stringToXmlConvert(String abc)
String xmlString = abc;
DocumentBuilderFactory factory =
DocumentBuilderFactory.newInstance();
DocumentBuilder builder;
try
builder = factory.newDocumentBuilder();
// Use String reader
Document document = builder.parse(new InputSource(new
StringReader(xmlString)));
TransformerFactory tranFactory =
TransformerFactory.newInstance();
Transformer aTransformer =
tranFactory.newTransformer();
Source src = new DOMSource(document);
StreamResult dest = new StreamResult(new
File("/home/shamim/Desktop/pro/inputBackQR.xml"));
aTransformer.transform(src, dest);
System.out.println("le has been generated
successfully form QR Code .");
catch (Exception e)
e.printStackTrace();

#Code for detecting QR code through pi camera
import the necessary packages
from imutils.video import VideoStream
from pyzbar import pyzbar
import argparse
import datetime
import imutils
import time
import cv2
construct the argument parser and parse the arguments
initialize the video stream and allow the camera sensor to warm up
print("[INFO] starting video stream...")
vs = VideoStream(src=0).start()
vs = VideoStream(usePiCamera=True).start()
time.sleep(2.0)
open the output CSV le for writing and initialize the set of
barcodes found thus far
csv = open(args["output"], "w")
found = set()
loop over the detected barcodes
for barcode in barcodes:
extract the bounding box location of the barcode and draw
bounding box surrounding the barcode on the image
(x, y, w, h) = barcode.rect
cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 0, 255), 2)
the barcode data is a bytes object so if we want to draw it
on our output image we need to convert it to a string rst
barcodeData = barcode.data.decode("utf-8")

barcodeType = barcode.type
draw the barcode data and barcode type on the image
text = " ()".format(barcodeData, barcodeType)
cv2.putText(frame, text, (x, y 10),
cv2.FONTHERSHEYSIMPLEX, 0.5, (0, 0, 255), 2)
if the barcode text is currently not in our CSV le, write
the timestamp + barcode to disk and update the set
if barcodeData not in found:
csv.write(",".format(datetime.datetime.now(),
barcodeData))
csv.ush()
found.add(barcodeData)
show the output frame
cv2.imshow("Barcode Scanner", frame)
key = cv2.waitKey(1) & 0xFF
if the `q` key was pressed, break from the loop
if key == ord("q"):
break
close the output CSV le do a bit of cleanup
print("[INFO] cleaning up...")
csv.close()
cv2.destroyAllWindows()
vs.stop()
